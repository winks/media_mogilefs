<?php

/**
 * Implements hook_stream_wrappers().
 */
function media_mogilefs_stream_wrappers()
{
    return array(
        'mogilefs' => array(
            'name' => t('MogileFS files'),
            'class' => 'MediaMogilefsStreamWrapper',
            'description' => t('Files served by MogileFS.'),
        )
    );
}

/**
 * Implements hook_menu().
 */
function media_mogilefs_menu()
{
    $items = array();

    $items['admin/config/media/mogilefs'] = array(
        'title' => 'MogileFS',
        'description' => 'Configure your MogileFS settings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('media_mogilefs_admin'),
        'access arguments' => array('access administration pages'),
    );

    return $items;
}

/**
 * Implements hook_admin().
 */
function media_mogilefs_admin()
{
    $form = array();

    $form['media_mogilefs_hosts'] = array(
        '#type' =>          'textfield',
        '#title' =>         t('MogileFS hosts'),
        '#default_value'    => variable_get('media_mogilefs_hosts', ''),
        '#required'         => true,
    );
    $form['media_mogilefs_class'] = array(
        '#type' =>          'textfield',
        '#title' =>         t('MogileFS class'),
        '#default_value'    => variable_get('media_mogilefs_class', ''),
        '#required'         => true,
    );
    $form['media_mogilefs_domain'] = array(
        '#type' =>          'textfield',
        '#title' =>         t('MogileFS domain'),
        '#default_value'    => variable_get('media_mogilefs_domain', ''),
        '#required'         => true,
    );

    return system_settings_form($form);
}

function media_mogilefs_boot2()
{ }

function media_mogilefs_url_inbound_alter2(&$result, $path, $path_language)
{
    // Create the path user/me/edit, which allows a user to edit their account.
    if (preg_match('|^user/me/edit(/.*)?|', $path, $matches)) {
        global $user;
        $result = 'user/' . $user->uid . '/edit' . $matches[1];
        file_put_contents('/tmp/xxa', json_encode(array($result, $path, $matches)).PHP_EOL);
    }
    // mogile
    if (preg_match('(^mog/(.*))', $path, $matches)) {
        $result = 'image.php?key='.$matches[1];
        file_put_contents('/tmp/xxx', json_encode(array($result, $path, $matches)).PHP_EOL);
    }
}
function media_mogilefs_url_outbound_alter2(&$path, &$options, $original_path)
{
    // Instead of pointing to user/[uid]/edit, point to user/me/edit.
    if (preg_match('|^user/([0-9]*)/edit(/.*)?|', $path, $matches)) {
        global $user;
        if ($user->uid == $matches[1]) {
            $path = 'user/me/edit' . $matches[2];
            file_put_contents('/tmp/xxb', json_encode(array($path, $matches)).PHP_EOL);
        }
    }
    // mogile
    if (preg_match('(^morg/(.*))', $path, $matches)) {
        $path = 'image.php?key='.$matches[1];
        file_put_contents('/tmp/xxy', json_encode(array($path, $matches)).PHP_EOL);
    }
}
